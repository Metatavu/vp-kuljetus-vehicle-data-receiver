/*
 * VP-Kuljetus Vehicle Management Services
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PublicTruck : Represent public info of single truck
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PublicTruck {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<uuid::Uuid>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "plateNumber")]
    pub plate_number: String,
    /// Truck identification number. This is unique for each truck and should be used as a hardware identifier for this specific truck.
    #[serde(rename = "vin")]
    pub vin: String,
}

impl PublicTruck {
    /// Represent public info of single truck
    pub fn new(plate_number: String, vin: String) -> PublicTruck {
        PublicTruck {
            id: None,
            name: None,
            plate_number,
            vin,
        }
    }
}
