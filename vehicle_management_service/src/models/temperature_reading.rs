/*
 * VP-Kuljetus Vehicle Management Services
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// TemperatureReading : Represents a single temperature reading being received from a thermometer
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TemperatureReading {
    /// unique ID of the device the sensor is connected to. ID is an IMEI when value is received from truck or towable and MAC address when received from terminal. 
    #[serde(rename = "deviceIdentifier")]
    pub device_identifier: String,
    /// Unique hardware sensor ID that is sending this temperature reading
    #[serde(rename = "hardwareSensorId")]
    pub hardware_sensor_id: String,
    /// The temperature value in Celsius. In case of a truck or towable, a valid value is within the range of -55.0 to 115.0. Invalid/error values as mapped from [Teltonika documentation](https://wiki.teltonika-gps.com/view/FMC650_Teltonika_Data_Sending_Parameters_ID#Permanent_I/O_elements) :   - 850.0 - Sensor not ready   - 2000.0 - Value read error   - 3000.0 - Not connected   - 4000.0 - ID Failed   - 5000.0 - Same as 850.0 
    #[serde(rename = "value")]
    pub value: f32,
    /// Timestamp for when the temperature was read. Unix timestamp in milliseconds.
    #[serde(rename = "timestamp")]
    pub timestamp: i64,
    #[serde(rename = "sourceType")]
    pub source_type: models::TemperatureReadingSourceType,
}

impl TemperatureReading {
    /// Represents a single temperature reading being received from a thermometer
    pub fn new(device_identifier: String, hardware_sensor_id: String, value: f32, timestamp: i64, source_type: models::TemperatureReadingSourceType) -> TemperatureReading {
        TemperatureReading {
            device_identifier,
            hardware_sensor_id,
            value,
            timestamp,
            source_type,
        }
    }
}

